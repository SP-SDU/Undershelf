@startuml Component Diagram
!theme cb_seq_Greys_9 from https://raw.githubusercontent.com/mweagle/C4-PlantUML-Themes/main/palettes

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Component Diagram

Person(user, "User", "A person searching for and discovering books")
System_Ext(csv_source, "CSV Data Source", "Book dataset in CSV format")

Container_Boundary(undershelf, "Undershelf System") {

  Container_Boundary(presentation_layer, "Presentation Layer") {
    Component(views,      "Views",      "Django Views",               "Orchestrates requests and responses")
    Component(templates,  "Templates",  "Django Templates",           "Renders HTML")
  }

  Container_Boundary(business_logic_layer, "Business Logic Layer") {
    Component(search,     "Search Component",         "Python", "Takes query, returns matching books")
    Component(sort,       "Sorting Component",        "Python", "Takes book list, returns sorted list")
    Component(rank,       "Ranking Component",        "Python", "Takes book list, returns top-K list")
    Component(recommend,  "Recommendation Component", "Python", "Takes book list, returns related suggestions")
  }

  Container_Boundary(data_access_layer, "Data Access Layer") {
    Component(model,      "Models",                "Django ORM",                "Defines book & review entities")
    Component(prep,       "Data Preprocessing",    "Python",                    "Cleans and standardizes raw data")
    Component(import,     "Data Import",           "Django Management Cmd",     "Loads preprocessed data into DB")
  }

  ContainerDb(db, "Database", "SQLite", "Stores books, reviews, and user data")
}

' External
Rel(user,          views,  "Uses",         "HTTPS")
Rel(import,        csv_source, "Reads from","CSV")

' Presentation orchestration
Rel(views,     search,      "Calls")
Rel(views,     sort,        "Calls")
Rel(views,     rank,        "Calls")
Rel(views,     recommend,   "Calls")
Rel(views,     templates,   "Renders")

' Data Access
Rel(search,    model,      "Reads from")
Rel(sort,      model,      "Reads from")
Rel(rank,      model,      "Reads from")
Rel(recommend, model,      "Reads from")

Rel(prep,      csv_source, "Reads from")
Rel(import,    prep,       "Uses")
Rel(import,    model,      "Creates/Updates")
Rel(model,     db,         "Read/Write", "ORM")

@enduml
